---
# Source: nginx/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-nginx
  namespace: default
  labels:
    helm.sh/chart: nginx-0.0.21
    app.kubernetes.io/name: nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.19.10"
    app.kubernetes.io/managed-by: Helm
data:
  nginx.conf: |-
    
    # nginx version: ENV_NGINX_VERSION_ENV
    user             nginx;
    worker_processes auto;
    error_log        /var/log/nginx/error.log warn;
    pid              /var/run/nginx.pid;
    events {
        worker_connections 1024;
    }
    http {
        include           /etc/nginx/mime.types;
        default_type      application/octet-stream;
        log_format        main '$remote_addr - $remote_user [$time_local] "$request" '
                               '$status $body_bytes_sent "$http_referer" '
                               '"$http_user_agent" "$http_x_forwarded_for" '
                               '$request_time $upstream_response_time $pipe';
        access_log        /var/log/nginx/access.log main;
        sendfile          on;
        keepalive_timeout 65;
        server {
            listen      80;
            server_name localhost;
            location / {
                default_type text/plain;
                access_log   off;
                error_log    off;
                return 200   'ok';
            }
        }
    }
  entrypoint.sh: |-
    
    #!/bin/sh
    
    set -o errexit
    set -o nounset
    
    NGINX_BIN=nginx
    if [ "${NGINX_DEBUG}" = "true" ]; then
      NGINX_BIN=nginx-debug
    fi
    
    CONF_DIR=/etc/nginx/
    
    cp "${CONF_DIR}/nginx.conf.tpl" "${CONF_DIR}/nginx.conf"
    perl -pi -e 's/ENV_([_A-Z0-9]+)_ENV/$ENV{$1}/g' "${CONF_DIR}/nginx.conf"
    
    ${NGINX_BIN} -g 'daemon off;'
---
# Source: nginx/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-nginx
  namespace: default
  labels:
    helm.sh/chart: nginx-0.0.21
    app.kubernetes.io/name: nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.19.10"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: nginx
    app.kubernetes.io/instance: release-name
---
# Source: nginx/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-nginx
  namespace: default
  annotations:
    {}
  labels:
    helm.sh/chart: nginx-0.0.21
    app.kubernetes.io/name: nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.19.10"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nginx
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        helm.sh/chart: nginx-0.0.21
        app.kubernetes.io/name: nginx
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "1.19.10"
        app.kubernetes.io/managed-by: Helm
      annotations:
        checksum/config: 41a5d710dba6c03ac720c2b842363812b894262351557deaf49687816ef6246b
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: nginx
          command:
            - sh
            - /entrypoint.sh
          securityContext:
            {}
          image: "nginx:1.19.10-alpine-perl"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
          env:
            - name: NGINX_DEBUG
              value: "false"
          volumeMounts:
            - name: release-name-nginx
              mountPath: /etc/nginx/nginx.conf.tpl
              subPath: nginx.conf
            - name: release-name-nginx
              mountPath: /entrypoint.sh
              subPath: entrypoint.sh
      volumes:
        - name: release-name-nginx
          configMap:
            name: release-name-nginx
            items:
              - key: nginx.conf
                path: nginx.conf
                mode: 292 # 0444
              - key: entrypoint.sh
                path: entrypoint.sh
                mode: 365 # 0555
---
# Source: nginx/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-nginx-test-connection"
  namespace: default
  labels:
    helm.sh/chart: nginx-0.0.21
    app.kubernetes.io/name: nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.19.10"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-nginx:80']
  restartPolicy: Never
